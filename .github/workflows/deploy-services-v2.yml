name: Deploy Calowin Services to Hugging Face

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.filter.outputs.services }}
    steps:
      - uses: actions/checkout@v4

      - name: Detect changed services
        id: filter
        run: |
          echo "Detecting changed services..."
          CHANGED=$(git diff --name-only HEAD~1 HEAD | cut -d/ -f1 | sort -u)

          SERVICES=()
          for dir in $CHANGED; do
            if [ -d "$dir/src" ] || [ -f "$dir/Dockerfile" ] || [ -f "$dir/README.md" ]; then
              SERVICES+=("\"$dir\"")
            fi
          done

          JSON="[$(IFS=,; echo "${SERVICES[*]}")]"
          echo "services=$JSON" >> $GITHUB_OUTPUT
          echo "Changed services detected: $JSON"

  deploy:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        service: ${{ fromJson(needs.detect-changes.outputs.changed-services) }}

    steps:
      - uses: actions/checkout@v4

      - name: Detect type of changes
        id: detect
        run: |
          SERVICE_DIR=${{ matrix.service }}
          echo "Checking changes in $SERVICE_DIR"

          if git diff --name-only HEAD~1 HEAD | grep -q "^$SERVICE_DIR/src/"; then
            echo "src_changed=true" >> $GITHUB_ENV
            echo "Source code changed in $SERVICE_DIR"
          else
            echo "src_changed=false" >> $GITHUB_ENV
          fi

          if git diff --name-only HEAD~1 HEAD | grep -E "^$SERVICE_DIR/(Dockerfile|README.md)"; then
            echo "non_src_changed=true" >> $GITHUB_ENV
            echo "Non-source files changed in $SERVICE_DIR"
          else
            echo "non_src_changed=false" >> $GITHUB_ENV
          fi

      - name: Set up JDK and Build JAR
        if: env.src_changed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
        run: |
          SERVICE_DIR=${{ matrix.service }}
          cd $SERVICE_DIR
          mvn clean package -DskipTests
          echo "Contents of target folder:"
          ls -lh target/

          JAR_FILE=$(ls target/*-SNAPSHOT.jar)
          echo "Built $JAR_FILE"

          # Upload as artifact for HF to download
          echo "Uploading artifact..."
          gh run upload-artifact --name "${SERVICE_DIR}-jar" "$JAR_FILE"
          echo "Uploaded $JAR_FILE as artifact ${SERVICE_DIR}-jar"

      - name: Push non-src files to HF
        if: env.non_src_changed == 'true'
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: |
          SERVICE_DIR=${{ matrix.service }}
          git clone https://$HF_USERNAME:$HF_TOKEN@huggingface.co/spaces/$HF_USERNAME/$SERVICE_DIR hf_upload/$SERVICE_DIR

          cd hf_upload/$SERVICE_DIR
          git checkout main || git checkout -b main

          cp ../../$SERVICE_DIR/Dockerfile . || true
          cp ../../$SERVICE_DIR/README.md . || true

          git config user.name "CI Bot"
          git config user.email "ci-bot@github.com"

          git add -A

          if ! git diff --cached --quiet; then
            git commit -m "Deploy non-src files update for $SERVICE_DIR"
            git push https://$HF_USERNAME:$HF_TOKEN@huggingface.co/spaces/$HF_USERNAME/$SERVICE_DIR main
            echo "Non-src files pushed"
          else
            echo "No changes to commit for $SERVICE_DIR"
          fi

      - name: Trigger HF rebuild for JAR-only changes
        if: env.src_changed == 'true' && env.non_src_changed == 'false'
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
        run: |
          SERVICE_DIR=${{ matrix.service }}
          echo "Triggering HF rebuild for $SERVICE_DIR (JAR-only change)..."
          curl -X POST \
               -H "Authorization: Bearer $HF_TOKEN" \
               -H "Accept: application/json" \
               https://huggingface.co/api/spaces/$HF_USERNAME/$SERVICE_DIR/rebuild
          echo "HF rebuild triggered for $SERVICE_DIR"

