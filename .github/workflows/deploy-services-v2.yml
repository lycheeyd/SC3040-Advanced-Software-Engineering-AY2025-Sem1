name: Deploy Calowin Services to Hugging Face

on:
  push:
    branches: [ main ]

  workflow_dispatch:

permissions:
  contents: read
  actions: read

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-services: ${{ steps.filter.outputs.services }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed services
        id: filter
        run: |
          echo "Detecting changed services..."

          SERVICE_DIRS=("CalowinAccount" "CalowinFriends" "CalowinNotification" "CalowinSpringNode" "CalowinTrip" "CalowinWellnessZone")

          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | cut -d/ -f1 | sort -u)

          SERVICES=()
          for dir in "${SERVICE_DIRS[@]}"; do
            if echo "$CHANGED" | grep -qE "^$dir/src/" || echo "$CHANGED" | grep -qE "^$dir/(pom\.xml|Dockerfile|README\.md)$"; then
              SERVICES+=("\"$dir\"")
            fi
          done

          JSON="[$(IFS=,; echo "${SERVICES[*]}")]"
          echo "services=$JSON" >> $GITHUB_OUTPUT
          echo "Changed services detected: $JSON"

  build-jar:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        service: ${{ fromJson(needs.detect-changes.outputs.changed-services) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if src changed
        id: check
        run: |
          SERVICE_DIR=${{ matrix.service }}
          echo "Checking changes in $SERVICE_DIR"

          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE "^$SERVICE_DIR/(src/|pom.xml)"; then
            echo "src_changed=true" >> $GITHUB_ENV
            echo "Source code changed in $SERVICE_DIR"
          else
            echo "src_changed=false" >> $GITHUB_ENV
          fi

      - name: Set up JDK
        if: env.src_changed == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build JAR
        if: env.src_changed == 'true'
        run: |
          cd ${{ matrix.service }}
          mvn clean package -DskipTests
          echo "Contents of target folder:"
          ls -lh target/
          echo "Built $(ls target/*-SNAPSHOT.jar)"

      - name: Upload built JAR
        if: env.src_changed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service }}-jar
          path: ${{ matrix.service }}/target/*-SNAPSHOT.jar

      - name: Update LAST_BUILD_ID respository variable
        if: env.src_changed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          VAR_NAME="LAST_BUILD_ID_${{ matrix.service }}"
          gh variable set "$VAR_NAME" --repo "${{ github.repository }}" --body "${{ github.run_id }}"
          echo "Updated repository variable $VAR_NAME = ${{ github.run_id }}"



  deploy:
    needs: [detect-changes, build-jar]
    if: needs.detect-changes.outputs.changed-services != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{ fromJson(needs.detect-changes.outputs.changed-services) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect type of changes
        id: detect
        run: |
          SERVICE_DIR=${{ matrix.service }}
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -qE "^$SERVICE_DIR/(src/|pom.xml)"; then
            echo "src_changed=true" >> $GITHUB_ENV
            echo "Source code changed in $SERVICE_DIR"
          else
            echo "src_changed=false" >> $GITHUB_ENV
          fi
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E "^$SERVICE_DIR/(Dockerfile|README.md)"; then
            echo "non_src_changed=true" >> $GITHUB_ENV
          else
            echo "non_src_changed=false" >> $GITHUB_ENV
          fi

      - name: Push to HuggingFace
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
          HF_USERNAME: ${{ secrets.HF_USERNAME }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          SERVICE_DIR=${{ matrix.service }}
          GITHUB_REPO="${{ github.repository }}"

          if [ "$src_changed" == "true" ]; then
            GITHUB_BUILD_ID="${{ github.run_id }}"
          else
            GITHUB_BUILD_ID="$(gh variable get "LAST_BUILD_ID_$SERVICE_DIR" --repo $GITHUB_REPO --json value -q ".value")"
          fi

          echo "Using GITHUB_BUILD_ID: $GITHUB_BUILD_ID"

          git clone https://$HF_USERNAME:$HF_TOKEN@huggingface.co/spaces/$HF_USERNAME/$SERVICE_DIR hf_upload/$SERVICE_DIR

          cd hf_upload/$SERVICE_DIR
          git checkout main || git checkout -b main

          cp ../../$SERVICE_DIR/Dockerfile . || true
          cp ../../$SERVICE_DIR/README.md . || true

          cat <<EOF > build-vars.env
          SERVICE_NAME=$SERVICE_DIR
          GITHUB_BUILD_ID=$GITHUB_BUILD_ID
          GITHUB_REPO=$GITHUB_REPO
          EOF

          git config user.name "CI/CD Pipeline"
          git config user.email "cicd-pipeline@github.com"

          git add -A

          if ! git diff --cached --quiet; then
            git commit -m "Deployed updates for $SERVICE_DIR"
            git push https://$HF_USERNAME:$HF_TOKEN@huggingface.co/spaces/$HF_USERNAME/$SERVICE_DIR main
            echo "Pushed updates for $SERVICE_DIR"
          else
            echo "No changes to commit for $SERVICE_DIR"
          fi

