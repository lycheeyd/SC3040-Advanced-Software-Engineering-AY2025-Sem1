name: Build & Deploy Microservices

on:
  push:
    branches:
      - main

  workflow_dispatch:

jobs:
  detect:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.detect.outputs.matrix }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Detect changed services
        id: detect
        run: |
          changed=$(git diff --name-only HEAD^ HEAD | cut -d/ -f1 | sort -u)

          services=()
          for folder in $changed; do
            case "$folder" in
              CalowinAccount|CalowinFriends|CalowinNotification|CalowinSpringNode|CalowinTrip|CalowinWellnessZone)
                services+=("\"$folder\"")
                ;;
            esac
          done

          if [ ${#services[@]} -eq 0 ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          else
            echo "matrix={\"include\":[${services[*]}]}" >> $GITHUB_OUTPUT
          fi

  build-deploy:
    needs: detect
    if: needs.detect.outputs.matrix != '{"include":[]}'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect.outputs.matrix) }}
      max-parallel: 6

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build service JAR
        working-directory: ${{ matrix.include }}
        run: |
          if [ -f "pom.xml" ]; then
            mvn -B clean package -DskipTests
            JAR_FILE=$(ls target/*.jar | head -n 1)
          elif [ -f "build.gradle" ]; then
            ./gradlew build -x test
            JAR_FILE=$(ls build/libs/*.jar | head -n 1)
          else
            echo "No build file found in ${{ matrix.include }}"
            exit 1
          fi
          echo "JAR_PATH=$JAR_FILE" >> $GITHUB_ENV

      - name: Deploy to Hugging Face
        env:
          HF_TOKEN: sc3040G5:${{ secrets.HF_TOKEN }}
        run: |
          folder="${{ matrix.include }}"

          case "$folder" in
            service1) repo="sc3040G5/CalowinAccount" ;;
            service2) repo="sc3040G5/CalowinFriends" ;;
            service3) repo="sc3040G5/CalowinNotification" ;;
            service4) repo="sc3040G5/CalowinSpringNode" ;;
            service5) repo="sc3040G5/CalowinTrip" ;;
            service6) repo="sc3040G5/CalowinWellnessZone" ;;
            *) echo "Unknown service $folder" && exit 1 ;;
          esac

          echo "Deploying $folder â†’ $repo"

          git clone https://$HF_TOKEN@huggingface.co/spaces/$repo /tmp/$folder
          cp $JAR_PATH /tmp/$folder/

          cd /tmp/$folder
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add -A
          git commit -m "Update JAR from $folder ($GITHUB_SHA)" || echo "No changes to commit"
          git push origin main
